name: 'Generate Post Version'
description: 'Generate post-release versions for continuous deployment (e.g., 0.0.113.post20240921231520)'
author: 'provide.io llc'

inputs:
  version-file:
    description: 'Path to the version file'
    required: false
    default: 'VERSION'
  update-file:
    description: 'Whether to update the version file with the post version'
    required: false
    default: 'true'
  timestamp-format:
    description: 'Format for the timestamp (default: %Y%m%d%H%M%S)'
    required: false
    default: '%Y%m%d%H%M%S'

outputs:
  base-version:
    description: 'The original base version from the file'
    value: ${{ steps.generate.outputs.base-version }}
  post-version:
    description: 'The generated post-release version'
    value: ${{ steps.generate.outputs.post-version }}
  timestamp:
    description: 'The timestamp used for the post version'
    value: ${{ steps.generate.outputs.timestamp }}

runs:
  using: 'composite'
  steps:
    - name: 🔖 Generate Post Version
      id: generate
      shell: bash
      run: |
        # Read base version from file
        if [ ! -f "${{ inputs.version-file }}" ]; then
          echo "❌ Version file not found: ${{ inputs.version-file }}"
          exit 1
        fi

        BASE_VERSION=$(cat "${{ inputs.version-file }}")

        # Generate timestamp
        TIMESTAMP=$(date +"${{ inputs.timestamp-format }}")

        # Create post-release version
        POST_VERSION="${BASE_VERSION}.post${TIMESTAMP}"

        echo "📦 Base version: $BASE_VERSION"
        echo "🕒 Timestamp: $TIMESTAMP"
        echo "🚀 Post version: $POST_VERSION"

        # Update version file if requested
        if [ "${{ inputs.update-file }}" = "true" ]; then
          echo "📝 Updating ${{ inputs.version-file }} with post version"
          echo "${POST_VERSION}" > "${{ inputs.version-file }}"
        fi

        # Set outputs
        echo "base-version=${BASE_VERSION}" >> $GITHUB_OUTPUT
        echo "post-version=${POST_VERSION}" >> $GITHUB_OUTPUT
        echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT

branding:
  icon: 'clock'
  color: 'blue'